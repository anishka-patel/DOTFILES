#+TITLE: Org file for dotfiles
#+AUTHOR: Anishka Patel
#+DESCRIPTION: A detailed explanation for creation and usage of my dotfiles.
#+EMAIL: anishka.vpatel@gmail.com
#+DATE: [2022-08-25 Thu]
#+OPTIONS: toc:2

* Project Structure
Directory structure for whole repository.
#+begin_src bash :shebang /usr/bin/bash :results code :exports both
tree . -L 1 -a
#+end_src

#+RESULTS:
#+begin_src bash
.
├── .bashrc
├── .config
├── .doom.d
├── exports
├── .git
├── .gitignore
├── install-script
├── .local
├── manuals
├── packages-list
├── README.md
├── README.org
├── script.sh
├── .vimrc
└── .zshrc

8 directories, 7 files
#+end_src
* Bash Config
Click below to take a look:
[[file:.bashrc][.bashrc file]]

Generated by the code below:
#+BEGIN_SRC bash
ln ~/.bashrc
#+END_SRC

* Zsh Config
Click below to take a look:
[[file:.zshrc][.zshrc file]]

Generated by the code below:
#+BEGIN_SRC bash
ln ~/.zshrc
#+END_SRC
* Vim Config
Click below to take a look:
[[file:.vimrc][.vimrc file]]

Generate by the code below:
#+BEGIN_SRC bash
ln ~/.vimrc
#+END_SRC
** Requirements
- Vim
#+begin_src bash
sudo pacman -S vim
#+end_src
** Notes
- Run ~:PlugInstall~ inside vim to install plugins
* AstroNvim config
AstroNvim - Highly pre-configured distribution for neovim with IDE like features.
** Requirements
- Neovim 0.7+
#+begin_src bash
sudo pacman -S neovim --noconfirm
#+end_src
- Nerd Fonts
#+begin_src bash
sudo yay -S nerd-fonts-complete
#+end_src
- Terminal w/ true color
#+begin_src bash
sudo pacman -S kitty --noconfirm
#+end_src
- Optional:
#+begin_src bash
sudo pacman -S ripgrep lazygit ncdu htop python nodejs --noconfirm
#+end_src
** Install - [[https://github.com/AstroNvim/AstroNvim][GitHub - AstroNvim]]
#+BEGIN_SRC bash
git clone https://github.com/AstroNvim/AstroNvim ~/.config/nvim
nvim +PackerSync
#+END_SRC
** Docs Link - [[https://astronvim.github.io/][Getting Started | AstroNvim]]
** Notes
- AstroNvim(nvim) does remove previous nvim configurations.
- nvim binary located at ~"/usr/bin/nvim"~
- Specification for ~vscodium~ plugin ~vscode-neovim~ are added to ~"~/.config/nvim/init.lua"~
- Plugins and configurations are added to ~plugin~ section in ~"~/.config/nvim/lua/user/init.lua"~
- Imp commands
  - ~:LspInstall~
  - ~:TSInstall~
  - ~:PackerSync~
  - ~:AstroUpdate~
  - ~:checkhealth~ for optional dependencies
- Personal modifications outside ~user/init.lua~
  - Show menu name in neovim completions
     ~ ~/.config/nvim/lua/configs/cmp.lua~
#+begin_src lua
-- format = function(_, vim_item) -- removed
format = function(entry, vim_item) -- modified
  vim_item.kind = string.format("%s", kind_icons[vim_item.kind]) -- nop
  vim_item.menu = ({      -- added
      luasnip = "[SNIP]", -- added
      nvim_lsp = "[LSP]", -- added
      buffer = "[BUFF]",  -- added
      path = "[PATH]",    -- added
  })[entry.source.name]   -- added
  return vim_item -- nop
#+end_src

* DoomEmacs config
** Requirements
#+begin_src bash
pacman -S git emacs ripgrep find fd --noconfirm
#+end_src
** Install
#+begin_src bash
git clone https://github.com/doomemacs/doomemacs ~/.emacs.d
~/.emacs.d/bin/doom install
#+end_src
** Notes
*** Some optional dependencies can be found through ~doom doctor~ command
#+begin_src
~/.emacs.d/bin/doom doctor
#+end_src
 * Refer to [[https://docs.doomemacs.org/latest/][Doom Docs]] for more info
*** Personal config at ~.doom.d/~
Run ~doom sync~ for install config modules
#+begin_src bash
~/.emacs.d/bin/doom sync
#+end_src

* VSCodium config
** Requirements
** Install
#+begin_src bash
yay -S vscodium-bin
#+end_src
** Notes
*** Packages list in ~packages-list/vscodium-package-list.txt~
#+begin_src bash
# generate list with command below
vscodium --list-extensions > vscoidum-packages-list.txt
#+end_src
*** Install packages
#+begin_src bash
cat vscodium-packages-list.txt | xargs vscodium --install-extensions
#+end_src
* Gesture config
Configuration for ~Gestures~ Application.
~Gestures~ application binds various keyboard shortcuts to touchpad gestures.
** Install ~Gestures~ application
#+BEGIN_SRC bash
sudo pacman -S community/gestures
#+END_SRC
** Configuration
Files stored as ~"~/.config/libinput-gestures.conf"~
Link to file: [[file:.config/libinput-gestures.conf][Gestures config file.]]
* Packages List ~packages-list/~
** Directory structure
#+begin_src bash :shebang /usr/bin/bash :results code :exports both
tree ./packages-list
#+end_src

#+RESULTS:
#+begin_src bash
./packages-list
├── brew-packages-list.txt
├── cargo-packages-list.txt
├── flatpak-packages-list.txt
├── go-packages-list.txt
├── npm-packages-list.txt
├── pacman-packages-list.txt
├── pip-packages-list.txt
├── script.sh
├── vscodium-packages-list.txt
└── yay-packages-list.txt

0 directories, 10 files
#+end_src
** script.sh
Script to generate packages list for all package managers
[[file:packages-list/script.sh][Pacakge list generator script]]
** Pacman packages
Pacman: Package installer for Arch Linux
*** List generated
1. Explicitly installed packages
   Link to file: [[file:pacman-packages-list.txt][Pacman-Packages-List]]
   Created with command:
#+BEGIN_SRC bash
pacman -Qqe > pacman-packages-list.txt
#+END_SRC
2. All packages
   Link to file: [[file:pacman-packages-list-full.txt][Pacman-Full-Packages-List]]
   Created with command:
#+BEGIN_SRC bash
pacman -Qq > pacman-packages-list-full.txt
#+END_SRC
3. Pacman option to remember for list generation:
   |--------+-----------------------------------------|
   | Option | Action                                  |
   |--------+-----------------------------------------|
   | -Q     | List all packages with version          |
   | -q     | List all packages without version       |
   | -e     | List all explicitly installed packages  |
   | -n     | List packages omitting foreign packages |
   | -m     | List all foreign packages               |
   |--------+-----------------------------------------|
4. Examples
#+BEGIN_SRC bash
pacman -Qqen
#+END_SRC
5. Link for reference: [[https://wiki.archlinux.org/title/pacman/Tips_and_tricks#List_of_installed_packages][Pacman/Tips and tricks - ArchWiki]]
** Yay packages
** Brew packages
** Flatpak packages
** Pip global packages
Pip: Package install for python
Link to file: [[file:pip-packages-list.txt][pip-packages-list]]
#+BEGIN_SRC bash
pip freeze | awk '{print $1}' > pip-packages-list.txt
#+END_SRC
** Npm global packages
Npm: Node package manager
Link to file: [[file:npm-packages-list.txt][npm-packages-list]]
 #+BEGIN_SRC bash
 npm -g list | awk '{print $2}' | awk -F '@' '{print $1}' > npm-packages-list.txt
 #+END_SRC
** Go global packages
** Rust global packages
* Manuals
#+begin_src bash :shebang /usr/bin/bash :results code :exports both
tree ./manuals
#+end_src

#+RESULTS:
#+begin_src bash
./manuals
├── emacs-manual.org
├── linux-admin.md
├── linux-admin.org
└── vue-nuxt-guide.org

0 directories, 4 files
#+end_src

* Install-Script
** Directory structure
#+begin_src bash :shebang /usr/bin/bash :results code :exports both
tree ./install-script
#+end_src

#+RESULTS:
#+begin_src bash
./install-script
├── install-script.md
├── install-script.org
├── install-script.pdf
└── install-script.sh

0 directories, 4 files
#+end_src
* Script.sh ~script.sh~
Script to run on KDE ~cmd~ widget: [[file:script.sh][Script]]

* Exports
** KDE-Shortcut-files
[[file:exports/ani-kde-scheme.kksrc][Global configuration file for KDE]]


#  LocalWords:  Pacman Npm Zsh AstroNvim neovim
